const { query } = require('./db');
const bcrypt = require('bcrypt');

const seedDatabase = async () => {
    try {
        console.log('Starting database seeding...');

        // Очистка всех таблиц
        console.log('Truncating tables...');
        await query(`
            TRUNCATE TABLE child_benefits CASCADE;
            TRUNCATE TABLE child_services CASCADE;
            TRUNCATE TABLE recommendations CASCADE;
            TRUNCATE TABLE progress_reports CASCADE;
            TRUNCATE TABLE benefits CASCADE;
            TRUNCATE TABLE payments CASCADE;
            TRUNCATE TABLE attendance CASCADE;
            TRUNCATE TABLE menu CASCADE;
            TRUNCATE TABLE services CASCADE;
            TRUNCATE TABLE daily_schedule CASCADE;
            TRUNCATE TABLE children CASCADE;
            TRUNCATE TABLE groups CASCADE;
            TRUNCATE TABLE users CASCADE;
        `);
        console.log('Tables truncated successfully');

        // Сброс последовательностей
        await query(`
            ALTER SEQUENCE IF EXISTS child_benefits_child_benefit_id_seq RESTART WITH 1;
            ALTER SEQUENCE IF EXISTS child_services_child_service_id_seq RESTART WITH 1;
            ALTER SEQUENCE IF EXISTS recommendations_recommendation_id_seq RESTART WITH 1;
            ALTER SEQUENCE IF EXISTS progress_reports_report_id_seq RESTART WITH 1;
            ALTER SEQUENCE IF EXISTS benefits_benefit_id_seq RESTART WITH 1;
            ALTER SEQUENCE IF EXISTS payments_payment_id_seq RESTART WITH 1;
            ALTER SEQUENCE IF EXISTS attendance_attendance_id_seq RESTART WITH 1;
            ALTER SEQUENCE IF EXISTS menu_menu_id_seq RESTART WITH 1;
            ALTER SEQUENCE IF EXISTS services_service_id_seq RESTART WITH 1;
            ALTER SEQUENCE IF EXISTS daily_schedule_schedule_id_seq RESTART WITH 1;
            ALTER SEQUENCE IF EXISTS children_child_id_seq RESTART WITH 1;
            ALTER SEQUENCE IF EXISTS groups_group_id_seq RESTART WITH 1;
            ALTER SEQUENCE IF EXISTS users_user_id_seq RESTART WITH 1;
        `);

        // Создание групп
        console.log('Creating groups...');
        await query(`
            INSERT INTO groups (group_name, age_range) VALUES
            ('Младшая группа', '3-4 года'),
            ('Средняя группа', '4-5 лет'),
            ('Старшая группа', '5-6 лет')
        `);
        console.log('Groups created successfully');

        // Создание администратора
        console.log('Creating admin user...');
        const hashedAdminPassword = await bcrypt.hash('admin123', 10);
        await query(`
            INSERT INTO users (email, password_hash, role, first_name, last_name)
            VALUES ('admin@kindergarten.ru', $1, 'admin', 'Admin', 'Admin')
        `, [hashedAdminPassword]);
        console.log('Admin user created successfully');

        // Создание психолога
        console.log('Creating psychologist user...');
        const hashedPsychPassword = await bcrypt.hash('psych123', 10);
        await query(`
            INSERT INTO users (email, password_hash, role, first_name, last_name)
            VALUES ('psych1@kindergarten.ru', $1, 'психолог', 'Психолог', 'Психологов')
        `, [hashedPsychPassword]);
        console.log('Psychologist user created successfully');

        // Создание воспитателей
        console.log('Creating teachers...');
        const teachers = [
            ['vosp1@kindergarten.ru', 'Валентина', 'Молева'],
            ['vosp2@kindergarten.ru', 'Наталья', 'Шерстова'],
            ['vosp3@kindergarten.ru', 'Иза', 'Александрова'],
            ['vosp4@kindergarten.ru', 'Анна', 'Воронина'],
            ['vosp5@kindergarten.ru', 'Наталья', 'Царинина'],
            ['vosp6@kindergarten.ru', 'Татьяна', 'Медведева']
        ];

        for (const [email, firstName, lastName] of teachers) {
            const hashedPass = await bcrypt.hash('vosp123', 10);
            await query(`
                INSERT INTO users (email, password_hash, role, first_name, last_name)
                VALUES ($1, $2, 'воспитатель', $3, $4)
            `, [email, hashedPass, firstName, lastName]);
        }
        console.log('Teachers created successfully');

        // Создание родителей
        console.log('Creating parents...');
        const parents = Array.from({ length: 15 }, (_, i) => [
            `parent${i + 1}@kindergarten.ru`,
            `Родитель${i + 1}`,
            `Родителев${i + 1}`
        ]);

        for (const [email, firstName, lastName] of parents) {
            const hashedPass = await bcrypt.hash('parent123', 10);
            await query(`
                INSERT INTO users (email, password_hash, role, first_name, last_name)
                VALUES ($1, $2, 'родитель', $3, $4)
            `, [email, hashedPass, firstName, lastName]);
        }
        console.log('Parents created successfully');

        // Получаем ID первого родителя для создания детей
        const parentResult = await query('SELECT user_id FROM users WHERE role = $1 ORDER BY user_id', ['родитель']);
        const firstParentId = parentResult.rows[0].user_id;

        // Создание детей (по 15 в каждой группе)
        const youngChildren = [
            ['Иван', 'Иванов', '2020-01-15'],
            ['Мария', 'Петрова', '2020-02-20'],
            ['Алексей', 'Сидоров', '2020-03-10'],
            ['Анна', 'Козлова', '2020-04-05'],
            ['Дмитрий', 'Смирнов', '2020-05-12'],
            ['Екатерина', 'Федорова', '2020-06-18'],
            ['Артем', 'Николаев', '2020-07-22'],
            ['София', 'Алексеева', '2020-08-30'],
            ['Максим', 'Дмитриев', '2020-09-14'],
            ['Виктория', 'Сергеева', '2020-10-25'],
            ['Кирилл', 'Павлов', '2020-11-03'],
            ['Алиса', 'Михайлова', '2020-12-08'],
            ['Тимофей', 'Андреев', '2021-01-17'],
            ['Полина', 'Егорова', '2021-02-28'],
            ['Даниил', 'Романов', '2021-03-15']
        ];

        const middleChildren = [
            ['Арсений', 'Кузнецов', '2019-01-15'],
            ['Варвара', 'Васильева', '2019-02-20'],
            ['Михаил', 'Попов', '2019-03-10'],
            ['Арина', 'Соколова', '2019-04-05'],
            ['Александр', 'Лебедев', '2019-05-12'],
            ['Милана', 'Козловская', '2019-06-18'],
            ['Лев', 'Новиков', '2019-07-22'],
            ['Елизавета', 'Морозова', '2019-08-30'],
            ['Марк', 'Волков', '2019-09-14'],
            ['Вероника', 'Зайцева', '2019-10-25'],
            ['Глеб', 'Соловьев', '2019-11-03'],
            ['Алиса', 'Виноградова', '2019-12-08'],
            ['Роман', 'Белов', '2019-01-17'],
            ['Василиса', 'Медведева', '2019-02-28'],
            ['Платон', 'Ершов', '2019-03-15']
        ];

        const olderChildren = [
            ['Матвей', 'Григорьев', '2018-01-15'],
            ['Алиса', 'Крылова', '2018-02-20'],
            ['Давид', 'Тихонов', '2018-03-10'],
            ['Милана', 'Белова', '2018-04-05'],
            ['Ярослав', 'Дорофеев', '2018-05-12'],
            ['София', 'Смирнова', '2018-06-18'],
            ['Артем', 'Соколов', '2018-07-22'],
            ['Варвара', 'Романова', '2018-08-30'],
            ['Максим', 'Фролов', '2018-09-14'],
            ['Арина', 'Антонова', '2018-10-25'],
            ['Лев', 'Комаров', '2018-11-03'],
            ['Ева', 'Ильина', '2018-12-08'],
            ['Марк', 'Макаров', '2018-01-17'],
            ['Елизавета', 'Кудрявцева', '2018-02-28'],
            ['Тимофей', 'Беляков', '2018-03-15']
        ];

        // Добавляем детей в младшую группу
        for (let i = 0; i < youngChildren.length; i++) {
            const [firstName, lastName, birthDate] = youngChildren[i];
            const parentId = firstParentId + (i % parents.length);
            await query(`
                INSERT INTO children (name, date_of_birth, parent_id, group_id)
                VALUES ($1, $2, $3, 1)
            `, [`${firstName} ${lastName}`, birthDate, parentId]);
        }

        // Добавляем детей в среднюю группу
        for (let i = 0; i < middleChildren.length; i++) {
            const [firstName, lastName, birthDate] = middleChildren[i];
            const parentId = firstParentId + (i % parents.length);
            await query(`
                INSERT INTO children (name, date_of_birth, parent_id, group_id)
                VALUES ($1, $2, $3, 2)
            `, [`${firstName} ${lastName}`, birthDate, parentId]);
        }

        // Добавляем детей в старшую группу
        for (let i = 0; i < olderChildren.length; i++) {
            const [firstName, lastName, birthDate] = olderChildren[i];
            const parentId = firstParentId + (i % parents.length);
            await query(`
                INSERT INTO children (name, date_of_birth, parent_id, group_id)
                VALUES ($1, $2, $3, 3)
            `, [`${firstName} ${lastName}`, birthDate, parentId]);
        }

        // Создание услуг
        await query(`
            INSERT INTO services (service_name, price, description, duration, total_price, days_of_week, time, teachers) VALUES
            ('Мозаика', 250.00, 'Изучение различных техник мозаичного творчества', '36 занятий', 9000.00, 'Понедельник, Вторник, Четверг', '16:30-17:00', 'Молева Валентина Михайловна, Шерстова Наталья Владимировна, Александрова Иза Владимировна'),
            ('Умелые ручки', 250.00, 'Развитие навыков складывания бумаги и создания поделок', '36 занятий', 9000.00, 'Понедельник', '17:10-17:40', 'Воронина Анна Владимировна'),
            ('Радужные лучики', 250.00, 'Нарисование и развитие художественного вкуса у детей', '36 занятий', 9000.00, 'Понедельник, Вторник', '16:30-17:00, 17:10-17:40', 'Шерстова Наталья Владимировна, Царинина Наталья Германовна'),
            ('Солнечные ступеньки', 300.00, 'Подготовка детей к школьной программе через игровую деятельность', '36 занятий', 10800.00, 'Вторник, Среда, Четверг', '16:30-17:00, 17:10-17:40', 'Медведева Татьяна Александровна, Моисеева Валентина Михайловна, Грибова Екатерина Владимировна'),
            ('Песочные фантазии', 250.00, 'Искусство рисования с помощью песка, развитие мелкой моторики', '36 занятий', 9000.00, 'Понедельник, Вторник, Четверг', '16:30-17:00', 'Махова Полина Игоревна, Александрова Иза Владимировна, Дроздова Наталья Геннадьевна'),
            ('Слоговички', 300.00, 'Занятия по коррекции произношения и улучшению речи', '36 занятий', 10800.00, 'Среда, Пятница', '16:30-17:00, 17:10-17:40', 'Маринина Лариса Сергеевна, Жукова Евгения Павловна, Курбатова Светлана Павловна'),
            ('Мастера и Мастерицы', 250.00, 'Развитие творческих и художественных навыков', '36 занятий', 9000.00, 'Понедельник, Среда, Пятница', '16:30-17:00', 'Воронина Анна Владимировна, Лебедева Анастасия Валерьевна, Трофимова Елена Викторовна'),
            ('Художественная гимнастика', 250.00, 'Занятия по художественной гимнастике для укрепления здоровья', '36 занятий', 9000.00, 'Понедельник, Вторник, Четверг', '17:10-17:40', 'Ерохина Анастасия Владимировна'),
            ('Волшебный комочек', 250.00, 'Игровые занятия для развития воображения и моторики', '36 занятий', 9000.00, 'Вторник, Четверг', '16:30-17:00', 'Архипова Анастасия Владимировна'),
            ('Читалочка', 300.00, 'Чтение с помощью кубиков Зайцева', '36 занятий', 10800.00, 'Понедельник, Среда, Вторник, Четверг', '16:30-17:00, 17:10-17:40', 'Фесок Светлана Игоревна, Железова Ирина Михайловна'),
            ('Крепыш', 250.00, 'Занятия для улучшения двигательной активности и физической формы', '36 занятий', 9000.00, 'Вторник, Среда, Пятница', '16:30-17:00', 'Ерохина Анастасия Владимировна'),
            ('Занимательный английский', 300.00, 'Игровое изучение основ английского языка', '36 занятий', 10800.00, 'Вторник, Среда, Четверг', '16:30-17:00', 'Волкова Марина Сергеевна'),
            ('Юный шахматист', 300.00, 'Обучение основам шахматной стратегии и тактики', '36 занятий', 10800.00, 'Среда, Четверг, Пятница', '18:30-19:00', 'Осипова Ольга Сергеевна'),
            ('Бусинка', 250.00, 'Плетение из бисера, развитие координации и творческих навыков', '36 занятий', 9000.00, 'Пятница', '16:30-17:00', 'Архипова Анастасия Владимировна')
        `);

        // Создание меню для всех групп
        await query(`
            -- Младшая группа
            INSERT INTO menu (date, dish_name, meal_type, weight, group_name) VALUES
            -- Завтрак
            (CURRENT_DATE, 'Каша гречневая молочная с маслом сливочным', 'Завтрак', '153 г', 'Младшая группа'),
            (CURRENT_DATE, 'Лапша молочная с маслом сливочным', 'Завтрак', '153 г', 'Младшая группа'),
            (CURRENT_DATE, 'Каша пшеничная молочная с маслом сливочным', 'Завтрак', '153 г', 'Младшая группа'),
            (CURRENT_DATE, 'Каша молочная с маслом сливочным', 'Завтрак', '153 г', 'Младшая группа'),
            (CURRENT_DATE, 'Каша с молоком', 'Завтрак', '150 г', 'Младшая группа'),
            (CURRENT_DATE, 'Каша геркулесовая молочная с маслом сливочным', 'Завтрак', '153 г', 'Младшая группа'),
            (CURRENT_DATE, 'Каша рисовая молочная с маслом сливочным', 'Завтрак', '153 г', 'Младшая группа'),
            (CURRENT_DATE, 'Каша манная молочная с маслом сливочным', 'Завтрак', '153 г', 'Младшая группа'),
            (CURRENT_DATE, 'Каша дружба молочная с маслом сливочным', 'Завтрак', '153 г', 'Младшая группа'),

            -- Второй завтрак
            (CURRENT_DATE, 'Чай с молоком', 'Второй завтрак', '150 г', 'Младшая группа'),
            (CURRENT_DATE, 'Компот из яблок', 'Второй завтрак', '150 г', 'Младшая группа'),
            (CURRENT_DATE, 'Фрукты свежие', 'Второй завтрак', '100 г', 'Младшая группа'),
            (CURRENT_DATE, 'Хлеб ржаной', 'Второй завтрак', '50 г', 'Младшая группа'),
            (CURRENT_DATE, 'Бутерброд с маслом сливочным', 'Второй завтрак', '20 г', 'Младшая группа'),
            (CURRENT_DATE, 'Бутерброд с маслом сливочным и сахаром', 'Второй завтрак', '20 г', 'Младшая группа'),

            -- Обед
            (CURRENT_DATE, 'Суп картофельный с мясом (свинина бескостная)', 'Обед', '150 г', 'Младшая группа'),
            (CURRENT_DATE, 'Рассольник Ленинградский со сметаной и мясом (свинина)', 'Обед', '160 г', 'Младшая группа'),
            (CURRENT_DATE, 'Борщ с капустой и картофелем со сметаной на курином бульоне', 'Обед', '150 г', 'Младшая группа'),
            (CURRENT_DATE, 'Щи из свежей капусты и картофеля со сметаной', 'Обед', '150 г', 'Младшая группа'),
            (CURRENT_DATE, 'Суп картофельный с макаронными изделиями', 'Обед', '150 г', 'Младшая группа'),
            (CURRENT_DATE, 'Суфле из печени', 'Обед', '50 г', 'Младшая группа'),
            (CURRENT_DATE, 'Котлета мясная (свинина)', 'Обед', '60 г', 'Младшая группа'),
            (CURRENT_DATE, 'Макароны отварные', 'Обед', '105 г', 'Младшая группа'),
            (CURRENT_DATE, 'Картофельное пюре', 'Обед', '120 г', 'Младшая группа'),

            -- Уплотнённый полдник
            (CURRENT_DATE, 'Бутерброд с маслом сливочным', 'Уплотнённый полдник', '20 г', 'Младшая группа'),
            (CURRENT_DATE, 'Бутерброд с маслом сливочным и сахаром', 'Уплотнённый полдник', '20 г', 'Младшая группа'),
            (CURRENT_DATE, 'Чай с молоком', 'Уплотнённый полдник', '150 г', 'Младшая группа'),
            (CURRENT_DATE, 'Компот из яблок', 'Уплотнённый полдник', '150 г', 'Младшая группа'),
            (CURRENT_DATE, 'Фрукты свежие', 'Уплотнённый полдник', '100 г', 'Младшая группа'),
            (CURRENT_DATE, 'Хлеб ржаной', 'Уплотнённый полдник', '50 г', 'Младшая группа'),

            -- Средняя группа
            -- Завтрак
            (CURRENT_DATE, 'Каша гречневая молочная с маслом сливочным', 'Завтрак', '153 г', 'Средняя группа'),
            (CURRENT_DATE, 'Лапша молочная с маслом сливочным', 'Завтрак', '153 г', 'Средняя группа'),
            (CURRENT_DATE, 'Каша пшеничная молочная с маслом сливочным', 'Завтрак', '153 г', 'Средняя группа'),
            (CURRENT_DATE, 'Каша молочная с маслом сливочным', 'Завтрак', '153 г', 'Средняя группа'),
            (CURRENT_DATE, 'Каша с молоком', 'Завтрак', '150 г', 'Средняя группа'),
            (CURRENT_DATE, 'Каша геркулесовая молочная с маслом сливочным', 'Завтрак', '153 г', 'Средняя группа'),
            (CURRENT_DATE, 'Каша рисовая молочная с маслом сливочным', 'Завтрак', '153 г', 'Средняя группа'),
            (CURRENT_DATE, 'Каша манная молочная с маслом сливочным', 'Завтрак', '153 г', 'Средняя группа'),
            (CURRENT_DATE, 'Каша дружба молочная с маслом сливочным', 'Завтрак', '153 г', 'Средняя группа'),

            -- Второй завтрак
            (CURRENT_DATE, 'Чай с молоком', 'Второй завтрак', '150 г', 'Средняя группа'),
            (CURRENT_DATE, 'Компот из яблок', 'Второй завтрак', '150 г', 'Средняя группа'),
            (CURRENT_DATE, 'Фрукты свежие', 'Второй завтрак', '100 г', 'Средняя группа'),
            (CURRENT_DATE, 'Хлеб ржаной', 'Второй завтрак', '50 г', 'Средняя группа'),
            (CURRENT_DATE, 'Бутерброд с маслом сливочным', 'Второй завтрак', '20 г', 'Средняя группа'),
            (CURRENT_DATE, 'Бутерброд с маслом сливочным и сахаром', 'Второй завтрак', '20 г', 'Средняя группа'),

            -- Обед
            (CURRENT_DATE, 'Суп картофельный с мясом (свинина бескостная)', 'Обед', '150 г', 'Средняя группа'),
            (CURRENT_DATE, 'Рассольник Ленинградский со сметаной и мясом (свинина)', 'Обед', '160 г', 'Средняя группа'),
            (CURRENT_DATE, 'Борщ с капустой и картофелем со сметаной на курином бульоне', 'Обед', '150 г', 'Средняя группа'),
            (CURRENT_DATE, 'Щи из свежей капусты и картофеля со сметаной', 'Обед', '150 г', 'Средняя группа'),
            (CURRENT_DATE, 'Суп картофельный с макаронными изделиями', 'Обед', '150 г', 'Средняя группа'),
            (CURRENT_DATE, 'Суфле из печени', 'Обед', '50 г', 'Средняя группа'),
            (CURRENT_DATE, 'Котлета мясная (свинина)', 'Обед', '60 г', 'Средняя группа'),
            (CURRENT_DATE, 'Макароны отварные', 'Обед', '105 г', 'Средняя группа'),
            (CURRENT_DATE, 'Картофельное пюре', 'Обед', '120 г', 'Средняя группа'),

            -- Уплотнённый полдник
            (CURRENT_DATE, 'Бутерброд с маслом сливочным', 'Уплотнённый полдник', '20 г', 'Средняя группа'),
            (CURRENT_DATE, 'Бутерброд с маслом сливочным и сахаром', 'Уплотнённый полдник', '20 г', 'Средняя группа'),
            (CURRENT_DATE, 'Чай с молоком', 'Уплотнённый полдник', '150 г', 'Средняя группа'),
            (CURRENT_DATE, 'Компот из яблок', 'Уплотнённый полдник', '150 г', 'Средняя группа'),
            (CURRENT_DATE, 'Фрукты свежие', 'Уплотнённый полдник', '100 г', 'Средняя группа'),
            (CURRENT_DATE, 'Хлеб ржаной', 'Уплотнённый полдник', '50 г', 'Средняя группа'),

            -- Старшая группа
            -- Завтрак
            (CURRENT_DATE, 'Каша гречневая молочная с маслом сливочным', 'Завтрак', '200 г', 'Старшая группа'),
            (CURRENT_DATE, 'Лапша молочная с маслом сливочным', 'Завтрак', '200 г', 'Старшая группа'),
            (CURRENT_DATE, 'Каша пшеничная молочная с маслом сливочным', 'Завтрак', '200 г', 'Старшая группа'),
            (CURRENT_DATE, 'Каша молочная с маслом сливочным', 'Завтрак', '200 г', 'Старшая группа'),
            (CURRENT_DATE, 'Каша с молоком', 'Завтрак', '180 г', 'Старшая группа'),
            (CURRENT_DATE, 'Каша геркулесовая молочная с маслом сливочным', 'Завтрак', '200 г', 'Старшая группа'),
            (CURRENT_DATE, 'Каша рисовая молочная с маслом сливочным', 'Завтрак', '200 г', 'Старшая группа'),
            (CURRENT_DATE, 'Каша манная молочная с маслом сливочным', 'Завтрак', '200 г', 'Старшая группа'),
            (CURRENT_DATE, 'Каша дружба молочная с маслом сливочным', 'Завтрак', '200 г', 'Старшая группа'),

            -- Второй завтрак
            (CURRENT_DATE, 'Салат морковный с яблоком', 'Второй завтрак', '60 г', 'Старшая группа'),
            (CURRENT_DATE, 'Запеканка из творога с печеньем', 'Второй завтрак', '120 г', 'Старшая группа'),
            (CURRENT_DATE, 'Рыба, запеченная в омлете', 'Второй завтрак', '80 г', 'Старшая группа'),
            (CURRENT_DATE, 'Салат из свежей капусты', 'Второй завтрак', '60 г', 'Старшая группа'),

            -- Обед
            (CURRENT_DATE, 'Суп картофельный с мясом (свинина бескостная)', 'Обед', '200 г', 'Старшая группа'),
            (CURRENT_DATE, 'Рассольник Ленинградский со сметаной и мясом (свинина)', 'Обед', '215 г', 'Старшая группа'),
            (CURRENT_DATE, 'Борщ с капустой и картофелем со сметаной на курином бульоне', 'Обед', '205 г', 'Старшая группа'),
            (CURRENT_DATE, 'Щи из свежей капусты и картофеля со сметаной', 'Обед', '200 г', 'Старшая группа'),
            (CURRENT_DATE, 'Суп картофельный с макаронными изделиями', 'Обед', '200 г', 'Старшая группа'),
            (CURRENT_DATE, 'Суфле из печени', 'Обед', '70 г', 'Старшая группа'),
            (CURRENT_DATE, 'Котлета мясная (свинина)', 'Обед', '80 г', 'Старшая группа'),
            (CURRENT_DATE, 'Макароны отварные', 'Обед', '125 г', 'Старшая группа'),
            (CURRENT_DATE, 'Картофель отварной', 'Обед', '150 г', 'Старшая группа'),

            -- Уплотнённый полдник
            (CURRENT_DATE, 'Салат морковный с яблоком', 'Уплотнённый полдник', '60 г', 'Старшая группа'),
            (CURRENT_DATE, 'Запеканка из творога с печеньем', 'Уплотнённый полдник', '120 г', 'Старшая группа'),
            (CURRENT_DATE, 'Рыба, запеченная в омлете', 'Уплотнённый полдник', '80 г', 'Старшая группа'),
            (CURRENT_DATE, 'Салат из свежей капусты', 'Уплотнённый полдник', '60 г', 'Старшая группа')
        `);

        // Обновление расписания дня для всех групп
        await query(`
            TRUNCATE TABLE daily_schedule CASCADE;
            INSERT INTO daily_schedule (action, time_of_day, group_name) VALUES
            -- Младшая группа
            ('Утренний приём, самостоятельная деятельность', '7:00-8:00', 'Младшая группа'),
            ('Утренняя гимнастика', '8:00-8:10', 'Младшая группа'),
            ('Подготовка к завтраку, завтрак', '8:10-8:40', 'Младшая группа'),
            ('Самостоятельная деятельность, подготовка к НОД', '8:50-9:00', 'Младшая группа'),
            ('Организованная образовательная деятельность', '8:40-8:50', 'Младшая группа'),
            ('Второй завтрак', '9:10-9:20', 'Младшая группа'),
            ('Подготовка к прогулке, прогулка', '9:20-11:00', 'Младшая группа'),
            ('Возвращение с прогулки, самостоятельная деятельность', '11:00-11:20', 'Младшая группа'),
            ('Подготовка к обеду, обед', '11:20-11:50', 'Младшая группа'),
            ('Подготовка ко сну, дневной сон', '11:50-15:00', 'Младшая группа'),
            ('Постепенный подъём, воздушные ванны, гимнастика', '15:00-15:10', 'Младшая группа'),
            ('Самостоятельная деятельность, игры, подготовка к НОД', '15:20-16:00', 'Младшая группа'),
            ('Организованная образовательная деятельность', '15:10-15:20', 'Младшая группа'),
            ('Самостоятельная деятельность, игры', '15:20-16:00', 'Младшая группа'),
            ('Подготовка к уплотненному полднику, уплотнённый полдник', '16:00-16:30', 'Младшая группа'),
            ('Подготовка к прогулке, прогулка', '16:30-19:00', 'Младшая группа'),

            -- Средняя группа
            ('Утренний приём, самостоятельная деятельность', '7:00-8:15', 'Средняя группа'),
            ('Утренняя гимнастика', '8:15-8:25', 'Средняя группа'),
            ('Подготовка к завтраку, завтрак', '8:25-8:55', 'Средняя группа'),
            ('Самостоятельная деятельность, подготовка к НОД', '9:00-9:20', 'Средняя группа'),
            ('Организованная образовательная деятельность', '8:55-9:15', 'Средняя группа'),
            ('Второй завтрак', '9:45-9:55', 'Средняя группа'),
            ('Подготовка к прогулке, прогулка', '9:55-11:40', 'Средняя группа'),
            ('Возвращение с прогулки, самостоятельная деятельность', '11:40-12:00', 'Средняя группа'),
            ('Подготовка к обеду, обед', '12:00-12:30', 'Средняя группа'),
            ('Подготовка ко сну, дневной сон', '12:30-15:10', 'Средняя группа'),
            ('Постепенный подъём, воздушные ванны, гимнастика', '15:10-15:20', 'Средняя группа'),
            ('Самостоятельная деятельность, игры, подготовка к НОД', '15:20-16:15', 'Средняя группа'),
            ('Организованная образовательная деятельность', '15:30-15:55', 'Средняя группа'),
            ('Подготовка к уплотненному полднику, уплотнённый полдник', '16:20-16:45', 'Средняя группа'),
            ('Подготовка к прогулке, прогулка', '16:45-19:00', 'Средняя группа'),

            -- Старшая группа
            ('Утренний приём, самостоятельная деятельность', '7:00-8:20', 'Старшая группа'),
            ('Утренняя гимнастика', '8:20-8:30', 'Старшая группа'),
            ('Подготовка к завтраку, завтрак', '8:30-9:00', 'Старшая группа'),
            ('Самостоятельная деятельность, подготовка к НОД', '9:00-9:10', 'Старшая группа'),
            ('Организованная образовательная деятельность', '9:20-9:45', 'Старшая группа'),
            ('Второй завтрак', '10:20-10:30', 'Старшая группа'),
            ('Подготовка к прогулке, прогулка', '10:30-11:50', 'Старшая группа'),
            ('Возвращение с прогулки, самостоятельная деятельность', '11:50-12:10', 'Старшая группа'),
            ('Подготовка к обеду, обед', '12:10-12:40', 'Старшая группа'),
            ('Подготовка ко сну, дневной сон', '12:40-15:10', 'Старшая группа'),
            ('Постепенный подъём, воздушные ванны, гимнастика', '15:10-15:20', 'Старшая группа'),
            ('Самостоятельная деятельность, игры, подготовка к НОД', '15:20-15:30', 'Старшая группа'),
            ('Самостоятельная деятельность, игры', '15:55-16:25', 'Старшая группа'),
            ('Подготовка к уплотненному полднику, уплотнённый полдник', '16:25-16:50', 'Старшая группа'),
            ('Подготовка к прогулке, прогулка', '16:50-19:00', 'Старшая группа')
        `);

        // Создание отчетов о прогрессе для каждого ребенка
        const children = await query('SELECT child_id FROM children');
        
        for (const child of children.rows) {
            // Создаем отчет за последний месяц
            await query(`
                INSERT INTO progress_reports (
                    child_id,
                    report_date,
                    active_speech,
                    games,
                    art_activity,
                    music_activity,
                    physical_activity,
                    cultural_behavior,
                    emotional_state,
                    discipline,
                    communication,
                    cognitive_activity,
                    height_cm,
                    weight_kg,
                    details
                ) VALUES (
                    $1,
                    CURRENT_DATE - INTERVAL '1 month',
                    $2,
                    $3,
                    $4,
                    $5,
                    $6,
                    $7,
                    $8,
                    $9,
                    $10,
                    $11,
                    $12,
                    $13,
                    $14
                )
            `, [
                child.child_id,
                Math.floor(Math.random() * 3) + 3, // active_speech (3-5)
                Math.floor(Math.random() * 3) + 3, // games (3-5)
                Math.floor(Math.random() * 3) + 3, // art_activity (3-5)
                Math.floor(Math.random() * 3) + 3, // music_activity (3-5)
                Math.floor(Math.random() * 3) + 3, // physical_activity (3-5)
                Math.floor(Math.random() * 3) + 3, // cultural_behavior (3-5)
                Math.floor(Math.random() * 3) + 3, // emotional_state (3-5)
                Math.floor(Math.random() * 3) + 3, // discipline (3-5)
                Math.floor(Math.random() * 3) + 3, // communication (3-5)
                Math.floor(Math.random() * 3) + 3, // cognitive_activity (3-5)
                Math.floor(Math.random() * 20) + 90, // height_cm (90-110)
                Math.floor(Math.random() * 10) + 15, // weight_kg (15-25)
                'Ребенок показывает хорошие результаты в развитии. Продолжает активно участвовать в занятиях.'
            ]);
        }

        console.log('Database seeding completed successfully!');
    } catch (error) {
        console.error('Error during database seeding:', error);
        throw error;
    }
};

// Вызываем функцию заполнения базы данных
seedDatabase().catch(console.error);

module.exports = { seedDatabase }; 